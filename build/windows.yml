# Based on https://github.com/BurntSushi/ripgrep/blob/master/appveyor.yml

parameters:
  target: ''
  rust_version: 'stable'

steps:
- powershell: |
    gci env:*
    $REPO=node -p "require('./config.json').ripgrepRepo"
    $TREEISH=node -p "require('./config.json').ripgrepTag"
    git clone https://github.com/${REPO}.git
    cd ripgrep
    git checkout $TREEISH
  displayName: Clone ripgrep

- powershell: |
    echo $env:reason
    echo $BUILD_SOURCEVERSION
    Invoke-WebRequest https://win.rustup.rs -UseBasicParsing -OutFile rustup-init.exe
    .\rustup-init.exe -y
    $env:PATH+=";C:\Users\appveyor\.cargo\bin"

    rustup default $env:RUST_VERSION
    rustc -V
    cargo -V

    rustup target add $env:TARGET
  env:
    RUST_VERSION: ${{ parameters.rust_version }}
    TARGET: ${{ parameters.target }}
    reason: variables['Build.Reason']
  displayName: Install Rust

- powershell: |
    $env:RUSTFLAGS='-C target-feature=+crt-static'
    cargo build --release --target $env:TARGET --features pcre2

    cargo test --target "$TARGET" --release --verbose --all --features 'pcre2'

    pushd ..
    $this_tag=git tag -l --contains HEAD
    popd

    $name="ripgrep-${this_tag}-${env:TARGET}.zip"
    dir
    dir .\target
    dir .\target\${env:TARGET}\release\rg.exe
    Compress-Archive -Update -Path .\target\${env:TARGET}\release\rg.exe -DestinationPath $env:BUILD_ARTIFACTSTAGINGDIRECTORY\$name
    echo "##vso[task.setvariable variable=Name]$name"
  displayName: Build
  workingDirectory: ripgrep
  env:
    TARGET: ${{ parameters.target }}
  condition: succeeded()

- powershell: mkdir $(Build.ArtifactStagingDirectory)/_manifest
  displayName: Create SBOM drop folder

- task: 1ES.PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: $(Build.ArtifactStagingDirectory)/$(Name)
    artifactName: $(Name)
    sbomBuildDropPath: $(Build.ArtifactStagingDirectory)
    sbomBuildComponentPath: $(Build.SourcesDirectory)/ripgrep/target/${{ parameters.target }}/release
  condition: succeeded()
